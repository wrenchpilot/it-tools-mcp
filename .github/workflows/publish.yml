name: Publish to Docker Hub and NPM

on:
  workflow_call:
    inputs:
      version:
        description: 'Package version'
        required: true
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      NPM_TOKEN:
        required: true
  workflow_dispatch:
    inputs:
      version:
        description: 'Package version to publish (leave empty to use package.json)'
        required: false
        type: string

env:
  REGISTRY: docker.io
  IMAGE_NAME: wrenchpilot/it-tools-mcp

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        if: github.event_name == 'workflow_call'
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build/

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript (if artifacts not available)
        if: github.event_name == 'workflow_dispatch'
        run: npm run build

      - name: Get version
        id: version
        run: |
          if [[ -n "${{ inputs.version }}" ]]; then
            VERSION="${{ inputs.version }}"
          else
            VERSION=$(node -p "require('./package.json').version")
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=v${{ steps.version.outputs.version }}
          labels: |
            org.opencontainers.image.title=IT Tools MCP Server
            org.opencontainers.image.description=MCP server providing access to various IT tools and utilities
            org.opencontainers.image.vendor=wrenchpilot
            org.opencontainers.image.version=${{ steps.version.outputs.version }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: true
          sbom: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Configure npm authentication
        run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to NPM
        run: npm publish --access public
